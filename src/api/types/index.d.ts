/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create an account */
        post: operations["c0a528837a692fa402f34cb30a4eba43"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Log In */
        post: operations["afc7affa4ec0a25b93354a4d620735ae"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/password_recovery_send_token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password recovery request by email (token) */
        post: operations["ead96e3886091ab1f0df108ddfa22a61"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/password_recovery_change_token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password recovery change password (token) */
        post: operations["f13d512cf04eb788486e4b61794e37f1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/password_recovery_send_otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password recovery request by email (otp) */
        post: operations["d0ec4ac23c547c2ca50348101ff2c228"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/password_recovery_change_otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password recovery change password (otp) */
        post: operations["eba2bc89c89bb98660748815a4cf901d"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company-global-settings/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Company Global Settings */
        get: operations["7b26de206ad231d01444f84b79a566d0"];
        /** UPDATE Company Global Settings */
        put: operations["79120d17447089cf748b329e7989f22c"];
        /** CREATE Company Global Settings */
        post: operations["c337be9ecdf38eebff4064f4133ddca4"];
        /** DELETE Company Global Settings */
        delete: operations["ee54d0c049a297dc41efcb6019fa19eb"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/currency/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Currencies */
        get: operations["5a513a867c6ff67f3fd8613bc35a1e8e"];
        /** UPDATE Currencies */
        put: operations["1457db89039eea0ff9b742ab6d413d0c"];
        /** CREATE Currencies */
        post: operations["3951c86b1830eab252768c9f0910cb3c"];
        /** DELETE Currencies */
        delete: operations["019827c75b05818693575d398be1149c"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/language/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Languages */
        get: operations["19a9ea23e3dbc813572b4db923000d0d"];
        /** UPDATE Languages */
        put: operations["9e709fe9c32209dd79b618f008fe04b6"];
        /** CREATE Languages */
        post: operations["ad0a0c15fa4e214bb561efaf2ddc1e90"];
        /** DELETE Languages */
        delete: operations["8f542e8d14c2cbb0b9e21a2f7571fe26"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/permissions/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Permissions */
        get: operations["3f852bddce1bdfeed66a43e241e61195"];
        put?: never;
        /** CREATE Permissions */
        post: operations["40c3d5841e4a5c475d2d9f7a775955a2"];
        /** DELETE Permissions */
        delete: operations["66d1d3ff24aa2e2d90cd43596b52bb1e"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/permissions/denied": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET DENIED Permissions */
        get: operations["c35efb9f0fdd7f42f5db05a43de1f82e"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/permissions/distribute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** DISTRIBUTE Permissions */
        put: operations["65ee878afc18a8dc67d1295813a3c5cd"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Role Permissions */
        get: operations["a34c4cbe356177f6d40b3f838ef6415f"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Roles */
        get: operations["6583326dd28cdfb38142ce882df9f2e8"];
        put?: never;
        /** CREATE Role */
        post: operations["001f543ec41f742aaa56b26a10dc48eb"];
        /** DELETE role */
        delete: operations["9bf7155b3dafcb8acb4ca02e8411232b"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Users with role */
        get: operations["6508536dbbad4fa8a62d8269210ddd61"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/roles/distribute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Distribute role */
        put: operations["3b97f51ed3903ac7dbb58ff660126f18"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/source/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Sources */
        get: operations["ca661d45778d4a93d392a0dc78184ae9"];
        /** UPDATE Sources */
        put: operations["ca11fbadf707361ea8517c705c9efb3b"];
        /** CREATE Sources */
        post: operations["0416c80c30fcf4ace10ed92c6d2a5253"];
        /** DELETE Sources */
        delete: operations["9739f64cee9b6fb0c685b29c97149c6a"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/manage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET Users */
        get: operations["80a43e69c9a3e0b283830207c133aa0d"];
        /** UPDATE User */
        put: operations["171eefb3bfccbfe2793d364aa1606e23"];
        post?: never;
        /** DELETE User */
        delete: operations["9d1625c58c0ed9b4a0b36eb8037055a1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET All Users */
        get: operations["7bcbcf5fc72e88487c8f32df4838af0d"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/acl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GET User ACL */
        get: operations["dd9a4cc964c04d3fdf21d6359ab3c0dc"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Register */
        register: {
            /** @description Name */
            name?: string;
            /** @description Password */
            password?: string;
            /** @description User email */
            email?: string;
            /** @description Phone */
            phone?: string;
            /** @description Avatar image */
            avatar?: Record<string, never>;
            /** @description Role */
            role?: string;
            /** @description Position */
            position?: string;
            /** @description Location */
            location?: string;
        };
        /** Login */
        login: {
            /** @description Login */
            login?: string;
            /** @description Password */
            password?: string;
        };
        /** "Password recovery request by email (token) */
        password_recovery_send_token: {
            /** @description email */
            email?: string;
        };
        /** Password recovery change password (token) */
        password_recovery_change_token: {
            /** @description email */
            email?: string;
            /** @description password */
            password?: string;
            /** @description token */
            token?: string;
        };
        /** "Password recovery request by email (otp) */
        password_recovery_send_otp: {
            /** @description email */
            email?: string;
        };
        /** Password recovery change password (otp) */
        password_recovery_change_otp: {
            /** @description email */
            email?: string;
            /** @description email */
            password?: string;
            /** @description email */
            otp?: number;
        };
        /** Company Global Settings GET */
        show: {
            /** @description ID */
            id?: number;
            /** @description company_name */
            company_name?: string;
        };
        /** Company Global Settings CREATE */
        store: {
            /** @description company_name */
            company_name?: string;
            /** @description timezone */
            timezone?: string;
            /** @description currency */
            currency?: string;
            /** @description language */
            language?: string;
            /** @description legal_address */
            legal_address?: string;
            /** @description warehouse_address */
            warehouse_address?: string;
            /** @description airlines */
            airlines?: string;
            /** @description dimensions_per_place */
            dimensions_per_place?: string;
            /** @description cost_per_airplace */
            cost_per_airplace?: number;
        };
        /** Company Global Settings UPDATE */
        update: {
            /** @description ID */
            id?: number;
            /** @description company_name */
            company_name?: string;
            /** @description timezone */
            timezone?: string;
            /** @description currency */
            currency?: string;
            /** @description language */
            language?: string;
            /** @description legal_address */
            legal_address?: string;
            /** @description warehouse_address */
            warehouse_address?: string;
            /** @description airlines */
            airlines?: string;
            /** @description dimensions_per_place */
            dimensions_per_place?: string;
            /** @description cost_per_airplace */
            cost_per_airplace?: number;
        };
        /** Company Global Settings DELETE */
        destroy: {
            /** @description ID */
            id?: number;
        };
        /** Currency GET */
        Currency_get: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description is_active */
            is_active?: boolean;
            /** @description is_base */
            is_base?: boolean;
        };
        /** Currency CREATE */
        Currency_post: {
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description symbol */
            symbol?: string;
            /** @description is_active */
            is_active?: boolean;
            /** @description is_base */
            is_base?: boolean;
            /**
             * Format: float
             * @description rate_to_base
             */
            rate_to_base?: number;
        };
        /** Currency UPDATE */
        Currency_put: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description name */
            symbol?: string;
            /** @description is_active */
            is_active?: boolean;
            /** @description name */
            is_base?: boolean;
            /**
             * Format: float
             * @description name
             */
            rate_to_base?: number;
        };
        /** Currency DELETE */
        Currency_delete: {
            /** @description ID */
            id?: number;
        };
        /** Language GET */
        language_get: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description locale */
            locale?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Language CREATE */
        language_post: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description native_name */
            native_name?: string;
            /** @description locale */
            locale?: string;
            /** @description direction */
            direction?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Language UPDATE */
        language_put: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description native_name */
            native_name?: string;
            /** @description locale */
            locale?: string;
            /** @description direction */
            direction?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Language DELETE */
        language_delete: {
            /** @description ID */
            id?: number;
        };
        /** Permissions GET */
        permissions_get: {
            /** @description ID */
            id?: number;
            /** @description code */
            role?: string;
            /** @description name */
            name?: string;
        };
        /** Permissions CREATE */
        permissions_create: {
            /** @description name */
            name?: string;
            /** @description description */
            description?: string;
            /** @description nicename */
            nicename?: string;
        };
        /** Permissions DELETE */
        permissions_delete: {
            /** @description name */
            name?: string;
        };
        /** Permissions GET DENIED */
        permissions_denied: {
            /** @description ID */
            id?: number;
            /** @description role */
            role?: string;
            /**
             * @description mode
             * @enum {string}
             */
            mode?: "give" | "revoke";
        };
        /** Permissions DISTRIBUTE */
        permissions_dist: {
            /** @description permissions */
            permissions?: string[];
            /** @description role */
            role?: string;
            /** @description user */
            user?: number;
            /**
             * @description mode
             * @enum {string}
             */
            mode?: "give" | "revoke";
        };
        /** Role Permissions GET */
        roles_permissions_get: {
            /** @description role */
            role?: string;
        };
        /** Roles GET */
        roles_get: {
            /** @description role (to filter one certain role) */
            role?: string;
            /** @description Get allowed for the user only?(Including your own capabilities) */
            allowed?: boolean;
            /** @description User ID to use with allowed */
            id?: boolean;
        };
        /** Users with role GET */
        roles_get_users: {
            /** @description role */
            role?: string;
        };
        /** Role CREATE */
        roles_create: {
            /** @description name */
            name?: string;
            /** @description description */
            description?: string;
            /** @description nicename to show in crm */
            nicename?: string;
        };
        /** Role DELETE */
        role_delete: {
            /** @description name */
            name?: string;
        };
        /** Role Distribute */
        role_distribute: {
            /** @description role */
            role?: string;
            /** @description user */
            user?: number;
            /** @description mode */
            mode?: string;
        };
        /** Source GET */
        source_get: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Source CREATE */
        source_post: {
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Source UPDATE */
        source_put: {
            /** @description ID */
            id?: number;
            /** @description code */
            code?: string;
            /** @description name */
            name?: string;
            /** @description is_active */
            is_active?: boolean;
        };
        /** Source DELETE */
        source_delete: {
            /** @description ID */
            id?: number;
        };
        /** Users GET */
        get_user: {
            /** @description User ID */
            id?: number;
            /** @description User email */
            email?: string;
        };
        /** Users List */
        list_users: unknown;
        /** Users GET ACL */
        get_user_acl: {
            /** @description User ID */
            id?: number;
            /** @description User email */
            email?: string;
        };
        /** Users DELETE */
        delete_user: {
            /** @description User ID */
            id?: number;
            /** @description User email */
            email?: string;
        };
        /** Users EDIT */
        edit_user: {
            /** @description User ID */
            id?: number;
            /** @description User name */
            name?: string;
            /** @description User email */
            email?: string;
            /** @description User phone */
            phone?: string;
            /** @description User position */
            position?: string;
            /** @description User location */
            location?: string;
            /** @description User avatar */
            avatar?: Record<string, never>;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    c0a528837a692fa402f34cb30a4eba43: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description Name */
                    name: string;
                    /** @description Password */
                    password: string;
                    /** @description User email */
                    email: string;
                    /** @description Phone */
                    phone?: string;
                    /** @description Avatar image */
                    avatar?: Record<string, never>;
                    /** @description Role */
                    role: string;
                    /** @description Position */
                    position?: string;
                    /** @description Location */
                    location?: string;
                };
            };
        };
        responses: {
            /** @description result: {user} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No permissions to register new users */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    afc7affa4ec0a25b93354a4d620735ae: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description Login */
                    login: string;
                    /** @description Password */
                    password: string;
                };
            };
        };
        responses: {
            /** @description <token> */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorised */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ead96e3886091ab1f0df108ddfa22a61: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description email */
                    email: string;
                };
            };
        };
        responses: {
            /** @description status */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description status */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    f13d512cf04eb788486e4b61794e37f1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description email */
                    email: string;
                    /** @description password */
                    password: string;
                    /** @description token */
                    token: string;
                };
            };
        };
        responses: {
            /** @description status */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description status */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    d0ec4ac23c547c2ca50348101ff2c228: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description email */
                    email: string;
                };
            };
        };
        responses: {
            /** @description OTP sent */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    eba2bc89c89bb98660748815a4cf901d: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description email */
                    email: string;
                    /** @description email */
                    password: string;
                    /** @description email */
                    otp?: number;
                };
            };
        };
        responses: {
            /** @description Password reset */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Invalid or expired OTP */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "7b26de206ad231d01444f84b79a566d0": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id?: number;
                    /** @description company_name */
                    company_name?: string;
                };
            };
        };
        responses: {
            /** @description {result: {[CompanyGlobalSettings]} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "79120d17447089cf748b329e7989f22c": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                    /** @description company_name */
                    company_name?: string;
                    /** @description timezone */
                    timezone?: string;
                    /** @description currency */
                    currency?: string;
                    /** @description language */
                    language?: string;
                    /** @description legal_address */
                    legal_address?: string;
                    /** @description warehouse_address */
                    warehouse_address?: string;
                    /** @description airlines */
                    airlines?: string;
                    /** @description dimensions_per_place */
                    dimensions_per_place?: string;
                    /** @description cost_per_airplace */
                    cost_per_airplace?: number;
                };
            };
        };
        responses: {
            /** @description {result: boolean} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No ID provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    c337be9ecdf38eebff4064f4133ddca4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description company_name */
                    company_name: string;
                    /** @description timezone */
                    timezone: string;
                    /** @description currency */
                    currency: string;
                    /** @description language */
                    language: string;
                    /** @description legal_address */
                    legal_address: string;
                    /** @description warehouse_address */
                    warehouse_address: string;
                    /** @description airlines */
                    airlines?: string;
                    /** @description dimensions_per_place */
                    dimensions_per_place?: string;
                    /** @description cost_per_airplace */
                    cost_per_airplace?: number;
                };
            };
        };
        responses: {
            /** @description {result: boolean} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ee54d0c049a297dc41efcb6019fa19eb: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                };
            };
        };
        responses: {
            /** @description {result: boolean} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No ID provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "5a513a867c6ff67f3fd8613bc35a1e8e": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id?: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description is_active */
                    is_active?: boolean;
                    /** @description is_base */
                    is_base?: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "1457db89039eea0ff9b742ab6d413d0c": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description name */
                    symbol?: string;
                    /** @description is_active */
                    is_active?: boolean;
                    /** @description name */
                    is_base?: boolean;
                    /**
                     * Format: float
                     * @description name
                     */
                    rate_to_base?: number;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "3951c86b1830eab252768c9f0910cb3c": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description code */
                    code: string;
                    /** @description name */
                    name: string;
                    /** @description symbol */
                    symbol: string;
                    /** @description is_active */
                    is_active: boolean;
                    /** @description is_base */
                    is_base: boolean;
                    /**
                     * Format: float
                     * @description rate_to_base
                     */
                    rate_to_base: number;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "019827c75b05818693575d398be1149c": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No ID provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "19a9ea23e3dbc813572b4db923000d0d": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id?: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description locale */
                    locale?: string;
                    /** @description is_active */
                    is_active?: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "9e709fe9c32209dd79b618f008fe04b6": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description native_name */
                    native_name?: string;
                    /** @description locale */
                    locale?: string;
                    /**
                     * @description direction
                     * @enum {string}
                     */
                    direction?: "ltr" | "rtl";
                    /** @description is_active */
                    is_active?: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ad0a0c15fa4e214bb561efaf2ddc1e90: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description code */
                    code: string;
                    /** @description name */
                    name: string;
                    /** @description native_name */
                    native_name: string;
                    /** @description locale */
                    locale: string;
                    /**
                     * @description direction
                     * @enum {string}
                     */
                    direction: "ltr" | "rtl";
                    /** @description is_active */
                    is_active: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "8f542e8d14c2cbb0b9e21a2f7571fe26": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No ID provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "3f852bddce1bdfeed66a43e241e61195": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id?: number;
                    /** @description code */
                    role?: string;
                    /** @description name */
                    name?: string;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "40c3d5841e4a5c475d2d9f7a775955a2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description name */
                    name: string;
                    /** @description description */
                    description?: string;
                    /** @description nicename */
                    nicename?: string;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Duplicate entry|No permission name provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "66d1d3ff24aa2e2d90cd43596b52bb1e": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    c35efb9f0fdd7f42f5db05a43de1f82e: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description user */
                    user?: number;
                    /** @description role */
                    role?: string;
                    /**
                     * @description mode
                     * @enum {string}
                     */
                    mode: "give" | "revoke";
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "65ee878afc18a8dc67d1295813a3c5cd": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description permissions */
                    permissions: string[];
                    /** @description role */
                    role?: string;
                    /** @description user */
                    user?: number;
                    /**
                     * @description mode
                     * @enum {string}
                     */
                    mode: "give" | "revoke";
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found|Can't modify your own permissions|Incorrect fields provided|Role not found */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not allowed {{mode}} permissions: {{permissions}} for role {{role}} */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    a34c4cbe356177f6d40b3f838ef6415f: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description role */
                    role: string;
                };
            };
        };
        responses: {
            /** @description {result:[{permissions}], count: integer} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No permissions found for this role */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "6583326dd28cdfb38142ce882df9f2e8": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description role (to filter one certain role) */
                    role?: string;
                    /** @description Get allowed for the user only?(Including your own capabilities) */
                    allowed?: boolean;
                    /** @description User ID to use with allowed */
                    id?: boolean;
                };
            };
        };
        responses: {
            /** @description {result:[{roles}], count: integer} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "001f543ec41f742aaa56b26a10dc48eb": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description name */
                    name: string;
                    /** @description description */
                    description?: string;
                    /** @description nicename to show in crm */
                    nicename?: string;
                };
            };
        };
        responses: {
            /** @description {{role object}} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Duplicate entry|No role name provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "9bf7155b3dafcb8acb4ca02e8411232b": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Cannot delete pre-defined role */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "6508536dbbad4fa8a62d8269210ddd61": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description role */
                    role: string;
                };
            };
        };
        responses: {
            /** @description {result:[{users}], count: integer} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "3b97f51ed3903ac7dbb58ff660126f18": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description role */
                    role: string;
                    /** @description user */
                    user: number;
                    /** @description mode */
                    mode: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found|Can't modify your own roles|Role not found */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not allowed {{mode}} role: various messages */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ca661d45778d4a93d392a0dc78184ae9: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id?: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description is_active */
                    is_active?: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ca11fbadf707361ea8517c705c9efb3b: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                    /** @description code */
                    code?: string;
                    /** @description name */
                    name?: string;
                    /** @description is_active */
                    is_active?: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "0416c80c30fcf4ace10ed92c6d2a5253": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description code */
                    code: string;
                    /** @description name */
                    name: string;
                    /** @description is_active */
                    is_active: boolean;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "9739f64cee9b6fb0c685b29c97149c6a": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description ID */
                    id: number;
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No ID provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "80a43e69c9a3e0b283830207c133aa0d": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description User ID */
                    id?: number;
                    /** @description User email */
                    email?: string;
                };
            };
        };
        responses: {
            /** @description {result:{user}} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "171eefb3bfccbfe2793d364aa1606e23": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description User ID */
                    id: number;
                    /** @description User name */
                    name?: string;
                    /** @description User email */
                    email?: string;
                    /** @description User phone */
                    phone?: string;
                    /** @description User position */
                    position?: string;
                    /** @description User location */
                    location?: string;
                    /** @description User avatar */
                    avatar?: Record<string, never>;
                };
            };
        };
        responses: {
            /** @description {result:boolean, user: {user}} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No permissions to edit users */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "9d1625c58c0ed9b4a0b36eb8037055a1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description User ID */
                    id?: number;
                    /** @description User email */
                    email?: string;
                };
            };
        };
        responses: {
            /** @description Bye */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description No permissions to delete users */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "7bcbcf5fc72e88487c8f32df4838af0d": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": unknown;
            };
        };
        responses: {
            /** @description {result:[{user}], count: integer} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dd9a4cc964c04d3fdf21d6359ab3c0dc: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** @description User ID */
                    id?: number;
                    /** @description User email */
                    email?: string;
                };
            };
        };
        responses: {
            /** @description {result: roles: [{role}], permissions: [{permission}]} */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
